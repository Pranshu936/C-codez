#include <stdio.h>
#include<stdlib.h>
#include<ctype.h>
#define size 50
char stack[size];
int top=-1;

void push(char ele)
{
if(top < size-1)
{
top = top+1;
stack[top]=ele;
}
else{
    printf("stack overflowed");
}
}

int pop()
{
if(top>=0)
{
char ele=stack[top];
top = top-1;
stack[top]=ele;
return ele;
}
return '\0';
}


int ope(char ele)
{
if(ele=='+'||ele=='-'||ele=='*'||ele=='/'||ele=='^')
{
return 1;
}
return 0;
}


int rank(char ele)
{
if(ele=='+'||ele=='-')
{
return 1;
}
else if(ele=='*'||ele=='/')
{
return 2;
}
else if(ele=='^')
{
return 3;
}
return 0;
}


void infpos(char inf[],char pos[])
{
int i=0;
int j=0;
while(inf[i]!='\0')
{
char ele=inf[i];
if(isalnum(ele))
{
pos[j]=ele;
j=j+1;
}

else if(ele=='(')
{
push(ele);
}

else if(ele==')')
{
char topele=pop();
while(topele!='(')
{
pos[j]=topele;
j=j+1;
topele = pop();
}
}
else if(ope(ele))
{
while(top>=0 && rank(stack[top])>=rank(ele))
{
pos[j]=pop();
j=j+1;
}
push(ele);
}
i=i+1;
}
while(top>=0)
{
pos[j]=pop();
j= j+1;
}
pos[j]='\0';
}
int main()
{
char inf[size],pos[size];
printf("value for infix : ");
scanf("%s",inf);
infpos(inf,pos);
printf("Postfix : %s",pos);
return 0;
}
